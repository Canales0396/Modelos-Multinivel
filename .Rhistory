fill="#2297E6"
)+
geom_boxplot(
width = 0.12,
alpha = 0.7,
fill="#2297E6",
outlier.color = "red"
)+
theme_tq() +
labs(
title = "Gráfico de densidad y caja",
x = "",
y = "Gasto",
) +
coord_flip()+
theme(legend.position ="right",plot.title = element_text(hjust = 0.5))
EGYPV2016TNF %>%
filter(GastoFin>= 200, GastoFin <= 3000) %>%
ggplot(aes(x = "", y=GastoFin))+
# add half-violin from {ggdist} package
stat_halfeye(
# adjust bandwidth
adjust = 0.5,
# move to the right
justification = -0.2,
# remove the slub interval
.width = 0,
point_colour = NA,
alpha=0.7,
fill="#61D04F"
)+
geom_boxplot(
width = 0.12,
alpha = 0.7,
fill="#61D04F",
outlier.color = "red"
)+
theme_tq() +
labs(
title = "Gráfico de densidad y caja",
x = "",
y = "Gasto",
) +
coord_flip()+
theme(legend.position ="right",plot.title = element_text(hjust = 0.5))
EGYPV2016TNF %>%
filter(Zona1 %in% c("Zona Centro", "Zona Insular", "Zona Norte","Zona Occidental",
"Zona Oriental","Zona Sur","Desconocido"),
GastoFin>=200, GastoFin<= 2000) %>%
ggplot(aes(x = factor(Zona1), y =GastoFin, fill = factor(Zona1)))+
# add half-violin from {ggdist} package
stat_halfeye(
# adjust bandwidth
adjust = 0.5,
# move to the right
justification = -0.2,
# remove the slub interval
.width = 0,
point_colour = NA,
alpha+0.7
)+
geom_boxplot(
width = 0.12,
# removing outliers
outlier.color = NA,
alpha = 0.7
)+
theme_tq() +
labs(
title = "Densidades y Box-plot",
x = "",
y = "Gasto ",
fill = "Zonas"
)+
coord_flip()+
theme(legend.position ="right",plot.title = element_text(hjust = 0.5))
EGYPV2016TNF %>%
filter(Zona1 %in% c("Zona Centro", "Zona Insular", "Zona Norte","Zona Occidental",
"Zona Oriental","Zona Sur","Desconocido"),
GastoFin>=200, GastoFin<= 2000) %>%
ggplot(aes(x = factor(Zona1), y =GastoFin, fill = factor(Zona1)))+
# add half-violin from {ggdist} package
stat_halfeye(
# adjust bandwidth
adjust = 0.5,
# move to the right
justification = -0.2,
# remove the slub interval
.width = 0,
point_colour = NA,
alpha=0.7
)+
geom_boxplot(
width = 0.12,
# removing outliers
outlier.color = NA,
alpha = 0.7
)+
theme_tq() +
labs(
title = "Densidades y Box-plot",
x = "",
y = "Gasto ",
fill = "Zonas"
)+
coord_flip()+
theme(legend.position ="right",plot.title = element_text(hjust = 0.5))
EGYPV2016TNF %>%
filter(Zona1 %in% c("Zona Centro", "Zona Insular", "Zona Norte","Zona Occidental",
"Zona Oriental","Zona Sur","Desconocido"),
GastoFin>=200, GastoFin<= 2000) %>%
ggplot(aes(x = factor(Zona1), y =GastoFin, fill = factor(Zona1)))+
# add half-violin from {ggdist} package
stat_halfeye(
# adjust bandwidth
adjust = 0.5,
# move to the right
justification = -0.2,
# remove the slub interval
.width = 0,
point_colour = NA,
alpha=0.6
)+
geom_boxplot(
width = 0.12,
# removing outliers
outlier.color = NA,
alpha = 0.6
)+
theme_tq() +
labs(
title = "Densidades y Box-plot",
x = "",
y = "Gasto ",
fill = "Zonas"
)+
coord_flip()+
theme(legend.position ="right",plot.title = element_text(hjust = 0.5))
EGYPV2016TNF %>%
filter(Zona1 %in% c("Zona Centro", "Zona Insular", "Zona Norte","Zona Occidental",
"Zona Oriental","Zona Sur","Desconocido"),
GastoFin>=200, GastoFin<= 2000) %>%
ggplot(aes(x = factor(Zona1), y =GastoFin, fill = factor(Zona1)))+
# add half-violin from {ggdist} package
stat_halfeye(
# adjust bandwidth
adjust = 0.5,
# move to the right
justification = -0.2,
# remove the slub interval
.width = 0,
point_colour = NA,
alpha=0.5
)+
geom_boxplot(
width = 0.12,
# removing outliers
outlier.color = NA,
alpha = 0.5
)+
theme_tq() +
labs(
title = "Densidades y Box-plot",
x = "",
y = "Gasto ",
fill = "Zonas"
)+
coord_flip()+
theme(legend.position ="right",plot.title = element_text(hjust = 0.5))
EGYPV2016TNF %>%
filter(Zona1 %in% c("Zona Centro", "Zona Insular", "Zona Norte","Zona Occidental",
"Zona Oriental","Zona Sur","Desconocido"),
GastoFin>=200, GastoFin<= 2000) %>%
ggplot(aes(x = factor(Zona1), y =GastoFin, fill = factor(Zona1)))+
# add half-violin from {ggdist} package
stat_halfeye(
# adjust bandwidth
adjust = 0.5,
# move to the right
justification = -0.2,
# remove the slub interval
.width = 0,
point_colour = NA,
alpha=0.5
)+
geom_boxplot(
width = 0.12,
# removing outliers
outlier.color = NA,
alpha = 0.5
)+
theme_tq() +
labs(
title = "Densidades y Box-plot",
x = "",
y = "Gasto ",
fill = "Zonas"
)+
coord_flip()+
theme(legend.position ="right",plot.title = element_text(hjust = 0.5))
EGYPV2016TNF %>%
filter(Zona1 %in% c("Zona Centro", "Zona Insular", "Zona Norte","Zona Occidental",
"Zona Oriental","Zona Sur","Desconocido"),
GastoFin>=200, GastoFin<= 2000) %>%
ggplot(aes(x = factor(Zona1), y =GastoFin, fill = factor(Zona1)))+
# add half-violin from {ggdist} package
stat_halfeye(
# adjust bandwidth
adjust = 0.5,
# move to the right
justification = -0.2,
# remove the slub interval
.width = 0,
point_colour = NA,
alpha=0.5
)+
geom_boxplot(
width = 0.12,
# removing outliers
outlier.color = NA,
alpha = 0.5
)+
theme_tq() +
labs(
title = "Densidades y Box-plot",
x = "",
y = "Gasto ",
fill = "Zonas"
)+
coord_flip()+
theme(legend.position ="right",plot.title = element_text(hjust = 0.5))
EGYPV2016TNF %>%
filter(Zona1 %in% c("Zona Centro", "Zona Insular", "Zona Norte","Zona Occidental",
"Zona Oriental","Zona Sur","Desconocido"),
GastoFin>=200, GastoFin<= 2000) %>%
ggplot(aes(x = factor(Zona1), y =GastoFin, fill = factor(Zona1)))+
# add half-violin from {ggdist} package
stat_halfeye(
# adjust bandwidth
adjust = 0.5,
# move to the right
justification = -0.2,
# remove the slub interval
.width = 0,
point_colour = NA
)+
geom_boxplot(
width = 0.12,
# removing outliers
outlier.color = NA,
alpha = 0.7
)+
theme_tq() +
labs(
title = "Densidades y Box-plot",
x = "",
y = "Gasto ",
fill = "Zonas"
)+
coord_flip()+
theme(legend.position ="right",plot.title = element_text(hjust = 0.5))
EGYPV2016TNF %>%
filter(Zona1 %in% c("Zona Centro", "Zona Insular", "Zona Norte","Zona Occidental",
"Zona Oriental","Zona Sur","Desconocido")) %>%
ggplot(aes(x = factor(Zona1), y=GastoFinN, fill = factor(Zona1)))+
# add half-violin from {ggdist} package
stat_halfeye(
# adjust bandwidth
adjust = 0.5,
# move to the right
justification = -0.2,
# remove the slub interval
.width = 0,
point_colour = NA
) +
geom_boxplot(
width = 0.12,
# removing outliers
outlier.color = NA,
alpha = 0.5
)+
theme_tq() +
labs(
title = "Densidades y Box-plot",
x = "",
y = "Gasto Logaritmico",
fill = "Zonas"
) +
coord_flip()+
theme(legend.position ="right",plot.title = element_text(hjust = 0.5))
EGYPV2016TNF %>%
filter(Zona1 %in% c("Zona Centro", "Zona Insular", "Zona Norte","Zona Occidental",
"Zona Oriental","Zona Sur","Desconocido")) %>%
ggplot(aes(x = factor(Zona1), y =LogGFN, fill = factor(Zona1)))+
# add half-violin from {ggdist} package
stat_halfeye(
# adjust bandwidth
adjust = 0.5,
# move to the right
justification = -0.2,
# remove the slub interval
.width = 0,
point_colour = NA
) +
geom_boxplot(
width = 0.12,
# removing outliers
outlier.color = NA,
alpha = 0.5
)+
theme_tq() +
labs(
title = "Densidades y Box-plot",
x = "",
y = "Gasto Logaritmico",
fill = "Zonas"
) +
coord_flip()
##Prueba del modelo log-shew-normal
library(brms)
model1 <- brm(log(GastoFin) ~ Zona1, family = skew_normal(), data = EGYPV2016TNF)
# Resumen del modelo ajustado
summary(model1)
plot(model1)
plot(model1,pars = list(title=paste("Intercepto,Zona Insular,Zona Norte,Zona Occidental,Zona Orienta,Zona Sur, Zona Desconocida, Sigma, Alpha")))
# Lista de zonas
zonas <- unique(EGYPV2016TNF$Zona1)
# Generar y personalizar los gráficos de cadenas para cada zona
for (zona in zonas) {
# Filtrar los datos para la zona actual
data_zona <- EGYPV2016TNF %>% filter(Zona1 == zona)
# Generar el modelo para la zona actual
model_zona <- brm(log(GastoFin) ~ Zona1, family = skew_normal(), data = data_zona)
# Cambiar el título de los gráficos de cadenas
plot(model_zona, pars = list(title = paste("Zona:", zona, "- Título Personalizado")))
}
# Generar y personalizar los gráficos de cadenas para cada zona
for (zona in zonas) {
# Filtrar los datos para la zona actual
data_zona <- EGYPV2016TNF %>% filter(Zona1 == zona)
# Generar el modelo para la zona actual
model_zona <- brm(log(GastoFin) ~ Zona1, family = skew_normal(), data = data_zona)
# Cambiar el título de los gráficos de cadenas
plot(model_zona, pars = list(title = paste("Zona:", zona, "- Título Personalizado")))
}
# Definir el modelo multinivel en brms sin covariables
model <- brm(
log(GastoFin) ~ lsn(gamma, alpha, lambda) + (1|Zona1),  # Modelo multinivel con efectos aleatorios por zona
family = lognormal(),
data = EGYPV2016TNF
)
# Definir el modelo multinivel en brms sin covariables
model <- brm(
log(GastoFin) ~ lsnn(gamma, alpha, lambda) + (1|Zona1),  # Modelo multinivel con efectos aleatorios por zona
family = shew_normal(),
data = EGYPV2016TNF
)
# Definir el modelo multinivel en brms sin covariables
model <- brm(
log(GastoFin) ~ lnorm(gamma, alpha) + (1|Zona1),  # Modelo multinivel con efectos aleatorios por zona
family = shew_normal(),
data = EGYPV2016TNF
)
# Definir el modelo multinivel en brms sin covariables
model <- brm(
log(GastoFin) ~ lnorm(gamma, alpha) + (1|Zona1),  # Modelo multinivel con efectos aleatorios por zona
family = gaussian(),
data = EGYPV2016TNF
)
# Definir el modelo multinivel en brms sin covariables
model <- brm(
log(GastoFin) ~ lsnn(gamma, alpha, lambda) + (1|Zona),  # Modelo multinivel con efectos aleatorios por zona
family = skew_normal(),
data = EGYPV2016TNF
)
# Definir el modelo multinivel en brms sin covariables
model <- brm(
log(GastoFin) ~ lsnn() + (1|Zona),  # Modelo multinivel con efectos aleatorios por zona
family = skew_normal(),
data = EGYPV2016TNF
)
# Definir el modelo multinivel en brms sin covariables
model <- brm(
log(GastoFin) ~ lsnn() + (1|Zona1),  # Modelo multinivel con efectos aleatorios por zona
family = skew_normal(),
data = EGYPV2016TNF
)
# Definir el modelo multinivel en brms sin covariables
model <- brm(
log(GastoFin) ~(1|Zona1),  # Modelo multinivel con efectos aleatorios por zona
family = skew_normal(),
data = EGYPV2016TNF
)
# Imprimir el resumen del modelo
summary(model)
# Graficar los resultados
plot(model)
model2 <- brm(
log(GastoFin) ~ lss() + (1|Zona1),
family = log_shew_normal(),
data = EGYPV2016TNF
)
model2 <- brm(
log(GastoFin) ~ lss() + (1|Zona1),
family = shew_normal(),
data = EGYPV2016TNF
)
model2 <- brm(
log(GastoFin) ~ lss() + (1|Zona1),
family = skew_normal(),
data = EGYPV2016TNF
)
# Imprimir el resumen del modelo
summary(model)
model2 <- brm(
log(GastoFin) ~ (1|Zona1),
family = skew_normal(
link = "log",
link_sigma = "identity",
link_alpha = "indetity"
),
data = EGYPV2016TNF
)
brms==2.18.0
gamlss.dist==6.0-5
library(brms)
library(ggplot2)
library(gamlss.dist)
set.seed(404)
N <- 200
X <- cbind(1, runif(N, 0, 100)) # Generate N uniform random numbers between 0-100
# Setting Distributions Params for Coefficients
B_mu <- c(10, 0.2)
B_sigma <- c(0.1, 0.02)
# Note it is nu for gamlss.dist, but alpha for brms
B_nu <- c(2, 0.5)
# Generating Coefficients for X values
mu <- X %*% B_mu
sigma <- exp(X %*% B_sigma)
nu <- X %*% B_nu
# Generating y-values
y <- gamlss.dist::rSN1(n=N, mu = mu, sigma = sigma, nu = nu)
sim_data <- data.frame(y, X)
lss_fm <- bf(
y ~ X2,
sigma ~ X2,
alpha ~ X2
)
lss_brm <- brm(lss_fm,
data = sim_data,
family = skew_normal(
link = "identity",
link_sigma = "log",
link_alpha = "identity")
)
# Summarising fit
summary(lss_brm)
# Prediction
pred_df <- data.frame(X2 = seq(0, 100))
lss_post_pred <- cbind(pred_df, predict(lss_brm, newdata = pred_df))
ggplot() +
geom_point(data=sim_data, aes(y=y, x=X2, shape="Data Point"))+
scale_shape_manual("",values=c(16))+
geom_ribbon(data=lss_post_pred,aes(x=X2, ymin=Q2.5, ymax=Q97.5,fill = "Confidence Interval"), alpha=0.5)+
scale_fill_manual("",values="grey12") +
geom_line(data=lss_post_pred,aes(x=X2, y=Estimate, color="Estimate"))+
scale_colour_manual(c("",""),values=c("black","black"))
###Propuesta del Modelo
library(brms)
modelo <- brm(
log(GastoFin) ~ 1 + (1|Zona1),
data = EGYPV2016TNF,
family = student,
prior = c(
prior(normal(0, 10), class = Intercept),
prior(student_t(3, 0, 10), class = sigma),
prior(gamma(3, 0.10), class = sd),
prior(normal(0, 10), class = b, coef = zona)
),
chains = 4,
iter = 2000
)
###Propuesta del Modelo
library(brms)
modelo <- brm(
log(GastoFin) ~ 1 + (1|Zona1),
data = EGYPV2016TNF,
family = student,
prior = c(
prior(normal(0, 10), class = Intercept),
prior(student_t(3, 0, 10), class = sigma),
prior(gamma(3, 0.10), class = sd),
prior(normal(0, 10), class = b, coef = Zona1)
),
chains = 4,
iter = 2000
)
modelo <- brm(
log(GastoFin) ~ 1 + (1|Zona1),
data = EGYPV2016TNF,
family = student,
prior = c(
prior(normal(0, 10), class = Intercept),
prior(student_t(3, 0, 10), class = sigma),
prior(gamma(3, 0.10), class = sd)
#prior(normal(0, 10), class = b, coef = Zona1)
),
chains = 4,
iter = 2000
)
summary(modelo)
plot(modelo)
